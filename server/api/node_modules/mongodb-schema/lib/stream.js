"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ParseStream = void 0;
const stream_1 = require("stream");
const schema_analyzer_1 = require("./schema-analyzer");
class ParseStream extends stream_1.Duplex {
    constructor(options) {
        super({ objectMode: true });
        this.schemaPaths = false;
        this.schemaPaths = !!(options === null || options === void 0 ? void 0 : options.schemaPaths);
        this.analyzer = new schema_analyzer_1.SchemaAnalyzer(options);
    }
    _write(obj, enc, cb) {
        this.analyzer.analyzeDoc(obj);
        this.emit('progress', obj);
        cb();
    }
    _read() { }
    _final(cb) {
        if (this.schemaPaths) {
            this.push(this.analyzer.getSchemaPaths());
        }
        else {
            this.push(this.analyzer.getResult());
        }
        this.push(null);
        cb();
    }
}
exports.ParseStream = ParseStream;
function makeParseStream(options) {
    return new ParseStream(options);
}
exports.default = makeParseStream;
//# sourceMappingURL=stream.js.map