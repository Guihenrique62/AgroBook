/// <reference types="node" />
import type { AggregationCursor, Document, FindCursor } from 'mongodb';
import { Readable } from 'stream';
import stream from './stream';
import { SchemaAnalyzer } from './schema-analyzer';
import type { ArraySchemaType, BaseSchemaType, ConstantSchemaType, DocumentSchemaType, PrimitiveSchemaType, SchemaType, Schema, SchemaField, SchemaParseOptions } from './schema-analyzer';
import * as schemaStats from './stats';
type MongoDBCursor = AggregationCursor | FindCursor;
declare function parseSchema(source: Document[] | MongoDBCursor | Readable, options?: SchemaParseOptions): Promise<Schema>;
declare function getSchemaPaths(source: Document[] | MongoDBCursor | Readable): Promise<string[][]>;
export default parseSchema;
export type { ArraySchemaType, BaseSchemaType, ConstantSchemaType, DocumentSchemaType, PrimitiveSchemaType, SchemaType, Schema, SchemaField, SchemaParseOptions };
export { stream, getSchemaPaths, SchemaAnalyzer, schemaStats };
