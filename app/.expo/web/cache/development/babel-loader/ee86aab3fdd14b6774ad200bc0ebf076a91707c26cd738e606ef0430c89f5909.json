{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { MaterialIcons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function CustomTabBar(_ref) {\n  var state = _ref.state,\n    descriptors = _ref.descriptors,\n    navigation = _ref.navigation;\n  var isAuthenticated = true;\n  if (state.routeNames[state.index] !== \"Home\" || !isAuthenticated) {\n    return null;\n  }\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(View, {\n      style: styles.content,\n      children: state.routes.map(function (route, index) {\n        var options = descriptors[route.key].options;\n        var isFocused = state.index === index;\n        var onPress = function onPress() {\n          var event = navigation.emit({\n            type: \"tabPress\",\n            target: route.key,\n            canPreventDefault: true\n          });\n          if (!isFocused && !event.defaultPrevented) {\n            navigation.navigate({\n              name: route.name,\n              merge: true\n            });\n          }\n        };\n        var onLongPress = function onLongPress() {\n          navigation.emit({\n            type: \"tabLongPress\",\n            target: route.key\n          });\n        };\n        return _jsxs(TouchableOpacity, {\n          accessibilityRole: \"button\",\n          accessibilityState: isFocused ? {\n            selected: true\n          } : {},\n          accessibilityLabel: options.tabBarAccessibilityLabel,\n          testID: options.tabBarTestID,\n          onPress: onPress,\n          onLongPress: onLongPress,\n          style: styles.tabButton,\n          children: [_jsx(MaterialIcons, {\n            name: options.tabBarIcon,\n            size: 45,\n            color: isFocused ? \"#000\" : \"#888\"\n          }), _jsx(Text, {\n            style: [styles.tabLabel, {\n              color: isFocused ? \"#000\" : \"#888\"\n            }],\n            children: options.title\n          })]\n        }, route.key);\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    height: 60,\n    backgroundColor: \"#fff\",\n    elevation: 2\n  },\n  content: {\n    flex: 1,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 155,\n    backgroundColor: \"#52f6af\"\n  },\n  tabButton: {\n    marginTop: 18\n  },\n  tabLabel: {\n    fontSize: 12,\n    marginTop: 4\n  }\n});","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","MaterialIcons","jsx","_jsx","jsxs","_jsxs","CustomTabBar","_ref","state","descriptors","navigation","isAuthenticated","routeNames","index","style","styles","container","children","content","routes","map","route","options","key","isFocused","onPress","event","emit","type","target","canPreventDefault","defaultPrevented","navigate","name","merge","onLongPress","accessibilityRole","accessibilityState","selected","accessibilityLabel","tabBarAccessibilityLabel","testID","tabBarTestID","tabButton","tabBarIcon","size","color","tabLabel","title","create","flexDirection","height","backgroundColor","elevation","flex","justifyContent","alignItems","paddingHorizontal","marginTop","fontSize"],"sources":["C:/Users/Usuario/OneDrive/Área de Trabalho/AgroBook/app/src/CustomTabBar/index.js"],"sourcesContent":["import React from \"react\";\r\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\n\r\nexport default function CustomTabBar({ state, descriptors, navigation }) {\r\n    const isAuthenticated = true; // Substitua por sua lógica de autenticação\r\n\r\n    if (state.routeNames[state.index] !== \"Home\" || !isAuthenticated) {\r\n        return null; // Não renderizar a TabBar em outras telas ou se o usuário não estiver autenticado\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <View style={styles.content}>\r\n                {state.routes.map((route, index) => {\r\n                    const { options } = descriptors[route.key];\r\n                    const isFocused = state.index === index;\r\n\r\n                    const onPress = () => {\r\n                        const event = navigation.emit({\r\n                            type: \"tabPress\",\r\n                            target: route.key,\r\n                            canPreventDefault: true,\r\n                        });\r\n\r\n                        if (!isFocused && !event.defaultPrevented) {\r\n                            navigation.navigate({\r\n                                name: route.name,\r\n                                merge: true,\r\n                            });\r\n                        }\r\n                    };\r\n\r\n                    const onLongPress = () => {\r\n                        navigation.emit({\r\n                            type: \"tabLongPress\",\r\n                            target: route.key,\r\n                        });\r\n                    };\r\n\r\n                    return (\r\n                        <TouchableOpacity\r\n                            accessibilityRole=\"button\"\r\n                            accessibilityState={\r\n                                isFocused ? { selected: true } : {}\r\n                            }\r\n                            accessibilityLabel={\r\n                                options.tabBarAccessibilityLabel\r\n                            }\r\n                            testID={options.tabBarTestID}\r\n                            onPress={onPress}\r\n                            onLongPress={onLongPress}\r\n                            style={styles.tabButton}\r\n                            key={route.key}\r\n                        >\r\n                            <MaterialIcons\r\n                                name={options.tabBarIcon}\r\n                                size={45}\r\n                                color={isFocused ? \"#000\" : \"#888\"}\r\n                            />\r\n                            <Text\r\n                                style={[\r\n                                    styles.tabLabel,\r\n                                    { color: isFocused ? \"#000\" : \"#888\" },\r\n                                ]}\r\n                            >\r\n                                {options.title}\r\n                            </Text>\r\n                        </TouchableOpacity>\r\n                    );\r\n                })}\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flexDirection: \"row\",\r\n        height: 60,\r\n        backgroundColor: \"#fff\",\r\n        elevation: 2,\r\n    },\r\n    content: {\r\n        flex: 1,\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        paddingHorizontal: 155,\r\n        backgroundColor: \"#52f6af\",\r\n    },\r\n    tabButton: {\r\n        marginTop: 18,\r\n    },\r\n    tabLabel: {\r\n        fontSize: 12,\r\n        marginTop: 4,\r\n    },\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}